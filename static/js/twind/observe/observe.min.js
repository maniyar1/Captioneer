import{tw as defaultTW}from"twind";var ensureMaxSize=(e,t)=>{e.size>t&&e.delete(e.keys().next().value)},escape="undefined"!=typeof CSS&&CSS.escape||(e=>e.replace(/[!"'`*+.,;:\\/<=>?@#$%&^|~()[\]{}]/g,"\\$&").replace(/^\d/,"\\3$& "));export*from"twind";var caches=new WeakMap,getCache=e=>{let t=caches.get(e);return t||(t=new Map,caches.set(e,t)),t},uniq=(e,t,r)=>r.indexOf(e)==t,createObserver=({tw:e=defaultTW}={})=>{const t=getCache(e),r=({target:r,addedNodes:n})=>{var a;const i=null==(a=r.getAttribute)?void 0:a.call(r,"class");if(i){let s=t.get(i);s||(s=e(i).split(/ +/g).filter(uniq).join(" "),t.set(i,s),t.set(s,s),ensureMaxSize(t,3e4)),i!==s&&r.setAttribute("class",s)}for(let e=n.length;e--;){const t=n[e];s([{target:t,addedNodes:t.children||[]}])}},s=e=>e.forEach(r);if("function"==typeof MutationObserver){const e=new MutationObserver(s);return{observe(t){return s([{target:t,addedNodes:[t]}]),e.observe(t,{attributes:!0,attributeFilter:["class"],subtree:!0,childList:!0}),this},disconnect(){return e.disconnect(),this}}}return{observe(){return this},disconnect(){return this}}};function observe(e,t=("function"==typeof this?void 0:this)){return createObserver(t).observe(e)}export{createObserver,observe};